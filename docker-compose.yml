services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file: .env
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT}:5432'
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  bot:
    build: .
    env_file: .env
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      WEBHOOK_URL: ${WEBHOOK_URL}
      WEBHOOK_SECRET: ${WEBHOOK_SECRET}
    depends_on:
      postgres:
        condition: service_healthy

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt/:rw
      - ./html/:/var/www/html/:rw
    depends_on:
      - bot


  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certs:/etc/letsencrypt
      - ./static:/var/www/html  # Доступ к статическим файлам для проверки
    command: >
      certonly --webroot 
      --webroot-path=/var/www/html 
      --email ${EMAIL} 
      --agree-tos 
      --no-eff-email 
      -d ${DOMAIN}

volumes:
  postgres_data: